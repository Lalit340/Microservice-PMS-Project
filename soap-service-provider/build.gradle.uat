buildscript {
	ext {
      springBootVersion = '2.1.8.RELEASE'
   }
   repositories {
      mavenCentral()
   }
   dependencies {
   	  classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
      classpath('se.transmode.gradle:gradle-docker:1.2')
   }
}

plugins {
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}
apply plugin: 'docker'
group = 'in.co.indusnet.soap'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations { 
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	jaxb
}
repositories {
	mavenCentral()
}

task buildDocker(type: Docker, dependsOn: build) {
   applicationName = jar.baseName
   dockerfile = file('src/main/docker/Dockerfile')
   doFirst {
      copy {
         from jar
         into stageDir
      }
   }
}

task genJaxb {
	ext.sourcesDir = "${projectDir}/src/main/resources"
  	ext.classesDir = "${buildDir}/classes/jaxb"
//    ext.indusWebSchema = "http://10.24.127.142:9088/IndusNetServices/IndusWebServiceSoap?wsdl"
//    ext.finacleSchema = "https://cbsuat.indusind.com:11209/fiwebservice/services/FIUsbWebService?wsdl"
//	  ext.nsdlSchema = "http://10.24.127.199:5555/ws/IndusInd_RBO_Account_NSDL.ws:PanValidation?WSDL"
//	  ext.otpSchema = "https://10.24.66.212:8443/OtpValidationService/services/OtpValidationServiceController?wsdl"
//	  ext.talismaSchema = "http://10.24.66.24/IIB_MobileBanking/MobileWS.asmx?wsdl"
    ext.indusWebSchema = "http://localhost/soap-service-provider/IndusWebServiceSoap.wsdl"
    ext.finacleSchema = "http://localhost/soap-service-provider/FIUsbWebService.wsdl"
	ext.nsdlSchema = "http://localhost/soap-service-provider/IndusInd_RBO_Account_NSDL.ws:PanValidation.wsdl"
	ext.otpSchema = "http://localhost/soap-service-provider/OtpValidationServiceController.wsdl"
	ext.talismaSchema = "http://localhost/soap-service-provider/MobileWS.asmx"
	outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)
            
            xjc(destdir: sourcesDir, schema: indusWebSchema,
                    package: "soap.indusweb.wsdl") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            xjc(destdir: sourcesDir, schema: finacleSchema,
                    package: "soap.finacle.wsdl") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
            
            xjc(destdir: sourcesDir, schema: nsdlSchema,
                    package: "soap.nsdl.wsdl") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
            
            xjc(destdir: sourcesDir, schema: otpSchema,
                    package: "soap.otp.wsdl") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
            
            xjc(destdir: sourcesDir, schema: talismaSchema,
                    package: "soap.talisma.wsdl") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/**/*.java")
                }
            }
        }
    }
}

task afterEclipseImport {
    dependsOn genJaxb
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
	//compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.8.RELEASE'

	
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	//compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'

	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.8.RELEASE'
	
	// https://mvnrepository.com/artifact/org.springframework.ws/spring-ws-core
	compile group: 'org.springframework.ws', name: 'spring-ws-core', version: '3.0.7.RELEASE'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.10'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.10'
	
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.10'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.10'
	
	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
	
	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20190722'
	
	// https://mvnrepository.com/artifact/org.modelmapper/moldelmapper			
	compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.5'
	
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
    compile group: 'org.springframework.security', name: 'spring-security-core'

	compile(files(genJaxb.classesDir).builtBy(genJaxb))
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.1.7'
    jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
    
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.1.9.RELEASE'
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-client
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '2.1.1.RELEASE'
}
